<?php

declare(strict_types=1);

namespace Juling\DevTools\Commands;

use Juling\DevTools\Support\SchemaTrait;
use think\console\Command;
use think\console\Input;
use think\console\input\Argument;
use think\console\Output;
use think\facade\View;

class GenEntityCommand extends Command
{
    use SchemaTrait;

    private array $ignoreTables = ['migrations'];

    private bool $grouping = false;

    protected function configure(): void
    {
        $this->setName('gen:entity')
            ->addArgument('grouping', Argument::OPTIONAL, 'generated by group', true)
            ->setDescription('Generate entity objects');
    }

    protected function execute(Input $input, Output $output): int
    {
        $this->grouping = boolval($input->getArgument('grouping'));

        $tables = $this->getTables();
        foreach ($tables as $row) {
            $tableName = implode('', $row);
            if (in_array($tableName, $this->ignoreTables)) {
                continue;
            }
            $columns = $this->getTableInfo($tableName);
            $this->entityTpl($tableName, $columns);
        }

        return 1;
    }

    private function entityTpl($tableName, $columns): void
    {
        $groupName = $this->getTableGroupName($tableName);
        $className = parse_name($tableName, 1);

        foreach ($columns as $key => $column) {
            if ($column['Field'] === 'default') {
                $column['Field'] = 'isDefault';
            }
            if ($column['Field'] === 'id' && empty($column['Comment'])) {
                $column['Comment'] = 'ID';
            }
            $columns[$key] = $column;
        }

        $data = [
            'grouping' => $this->grouping,
            'groupName' => $groupName,
            'className' => $className,
            'columns' => $columns,
        ];
        $tpl = file_get_contents(__DIR__.'/stubs/entity/entity.stub');
        $content = View::display($tpl, $data);

        $dist = $this->grouping ? app_path('bundles/'.$groupName.'/entity') : app_path('entity');
        $this->ensureDirectoryExists($dist);
        file_put_contents($dist.'/'.$className.'Entity.php', '<?php'."\n\n".$content);
    }
}
